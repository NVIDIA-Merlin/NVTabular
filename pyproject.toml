[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11>=2.6.0",
]

build-backend = "setuptools.build_meta"

[tool.poetry]
name = "nvtabular"
description = ""
version = "0.7.0"
authors = ["nvidia"]

[tool.poetry.dependencies]
python = ">=3.7.1,<4"
PyYAML = ">=5.3"
dask = ">=2021.7.1"
distributed = ">=2021.7.1"
# we require cudf / dask-cuda / dask-cudf
# but there doesn't seem to be any way to get poetry to recognize them
# (they aren't on pypi, specifying the git repo urls also doesn't work)
# cudf =" >=0.19"
# dask-cuda =" >=0.19"
# dask-cudf =" >=0.19"
# cupy = ">=8"
protobuf = ">=3.0.0"
tensorflow-metadata = ">=1.2.0"
tqdm = ">=4.0"
pandas = ">=1.2.0"
numba = ">=0.54.0"
pyarrow = ">=1.0"


[tool.poetry.dev-dependencies]
dask = ">=19"
flake8 = ">=3.7"
nbsphinx = ">=0.6"
pytest = ">=5"
recommonmark = ">=0.6"
Sphinx = ">=3"
sphinx_markdown_tables = "*"
sphinx-multiversion = "*"
moto = "*"
boto3 = "*"
s3fs = "*"
sphinx_rtd_theme = "*"
scikit-learn = "*"
graphviz = "*"
asvdb = { git = "https://github.com/rapidsai/asvdb.git", branch = "main" }

[tool.black]
line-length = 100

[tool.isort]
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
ensure_newline_before_comments = true
line_length = 100
balanced_wrapping = true
indent = "    "
known_third_party = ["cudf", "cupy", "dask", "dask_cuda", "dask_cudf", "numba", "numpy", "pytest", "torch", "rmm", "tensorflow"]
skip = ["build",".eggs", "examples/criteo_benchmark.py", "examples/dataloader_bench.py", "model_config_pb2.py"]

[tool.pytest.ini_options]
filterwarnings = [
		'ignore:`np.*` is a deprecated alias:DeprecationWarning',
		'ignore:The default dtype for empty Series:DeprecationWarning',
		'ignore:General-metadata information not detected:UserWarning',
		'ignore:Changing an NVTabular Dataset to CPU mode:UserWarning',
		'ignore:Initializing an NVTabular Dataset in CPU mode:UserWarning',
		'ignore:Performing a hash-based transformation:UserWarning',
    		'ignore:WARNING..cuDF.to_dlpack',
    		'ignore:::numba.cuda.envvar:',
		'ignore:Call to deprecated create function:DeprecationWarning',
	]
