# base arg is nvtabular image on which to build
# dev decides whether to copy notebooks in and
# run as root. For production use to allow cupti
# profiling and treat examples as self contained
ARG base
ARG dev=false

# main container built on top of nvtabular
FROM ${base} AS nvtabular
ARG token=nvidia

ENV HOME=/home/docker
WORKDIR $HOME
VOLUME $HOME
EXPOSE 8888 6006

ADD examples/tensorflow/requirements.txt requirements.txt
RUN conda install -c conda-forge -c rapidsai jupyterlab dask-cudf && \
      pip install -U -r requirements.txt && \
      rm requirements.txt
RUN conda install nodejs>=10.0.0 && \
      jupyter nbextension enable --py widgetsnbextension && \
      jupyter labextension install @jupyter-widgets/jupyterlab-manager

# set up cupti profiling
RUN apt-get install -y modprobe && modprobe -r nvidia_uvm nvidia_drm nvidia_modeset nvidia-vgpu-vfio nvidia && \
      modprobe nvidia NVreg_RestrictProfilingToAdminUsers=0
ENV LD_LIBRARY_PATH="/usr/local/cuda-10.1/extras/CUPTI/lib64/:${LD_LIBRARY_PATH}"

# different images for dev and production
FROM nvtabular as true
ENTRYPOINT jupyter lab --ip=0.0.0.0 --LabApp.token=${token}

FROM nvtabular as false
COPY examples/ $HOME
ENTRYPOINT jupyter lab --ip=0.0.0.0 --LabApp.token=${token} --allow-root

FROM ${dev}
