ARG CUDA_VERSION=10.2
ARG CUDA_SHORT_VERSION=${CUDA_VERSION}
ARG LINUX_VERSION=ubuntu18.04
FROM nvidia/cuda:${CUDA_VERSION}-cudnn7-devel-${LINUX_VERSION}
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/lib
# Needed for cudf.concat(), avoids "OSError: library nvvm not found"
ENV NUMBAPRO_NVVM=/usr/local/cuda/nvvm/lib64/libnvvm.so
ENV NUMBAPRO_LIBDEVICE=/usr/local/cuda/nvvm/libdevice/
ARG CUDF_VERSION=0.15
ARG PYTHON_VERSION=3.7
ENV DEBIAN_FRONTEND=noninteractive
# HugeCTR Build
ARG CMAKE_BUILD_TYPE=Release
ARG SM=70
ARG VAL_MODE=OFF
ARG ENABLE_MULTINODES=OFF
ARG NCCL_A2A=OFF

# Install linux packages
ARG APTCC=7
ARG APTCXX=7
RUN apt update -y --fix-missing && \
    apt upgrade -y && \
    apt install -y \
      cmake \
      git \
      gcc-${APTCC} \
      g++-${APTCXX} \
      libboost-all-dev \
      python3-pip \
      tzdata \
      vim \
      wget

# Install Python Packages
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install --no-cache-dir \
    "numpy>=1.16,<1.19" \
    pandas \
    "setuptools>=41.0" \
    "six>=1.12" \
    sklearn \
    ortools \
    tensorflow

# Install conda
ADD https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh /miniconda.sh
RUN sh /miniconda.sh -b -p /conda && /conda/bin/conda update -n base conda
ENV PATH=${PATH}:/conda/bin
# Enables "source activate conda"
SHELL ["/bin/bash", "-c"]

# Install cudf
RUN conda install -c rapidsai-nightly -c nvidia -c conda-forge -c defaults \
    cudf=${CUDF_VERSION} python=${PYTHON_VERSION} cudatoolkit=${CUDA_SHORT_VERSION}

RUN conda install -c conda-forge pyyaml

#RUN mv nccl/build/include/*.h /usr/include && \
#    mv nccl/build/lib/libnccl* /usr/lib/x86_64-linux-gnu/ && \
#    rm -rf nccl

# Install HugeCTR
RUN git clone -b cgarg/parquet-v2.2-integ https://gitlab-master.nvidia.com/zehuanw/hugectr.git &&\
    cd hugectr && \
    git submodule update --init --recursive && \
    mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DSM=$SM \
    -DVAL_MODE=${VAL_MODE} -DENABLE_MULTINODES=${ENABLE_MULTINODES} -DNCCL_A2A=${NCCL_A2A} .. && \
    make -j && \
    mkdir /usr/local/hugectr && \
    make install && \
    chmod +x /usr/local/hugectr/bin/* && \
    rm -rf HugeCTR 

ENV PATH /usr/local/hugectr/bin:$PATH

# Install NVTabular
COPY . nvtabular/

RUN pip install --no-cache-dir -e nvtabular/.